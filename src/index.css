@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 220 40% 10%;
    --foreground: 210 10% 95%;

    --card: 220 40% 13%;
    --card-foreground: 210 10% 95%;

    --popover: 220 40% 8%;
    --popover-foreground: 210 10% 95%;

    --primary: 195 100% 50%;
    --primary-foreground: 210 10% 98%;

    --secondary: 220 40% 15%;
    --secondary-foreground: 210 10% 95%;

    --muted: 220 40% 20%;
    --muted-foreground: 210 10% 85%;

    --accent: 195 80% 60%;
    --accent-foreground: 210 10% 95%;

    --destructive: 0 90% 60%;
    --destructive-foreground: 210 10% 95%;

    --border: 220 40% 20%;
    --input: 220 40% 20%;
    --ring: 195 100% 50%;

    --radius: 0.75rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-mono;
  }
}

/* Terminal Effect */
.terminal-text {
  position: relative;
  font-family: monospace;
  overflow: hidden;
  white-space: nowrap;
  margin: 0;
  letter-spacing: 0.15em;
}

.terminal-text::after {
  content: "|";
  position: absolute;
  right: 0;
  animation: blink 1s step-end infinite;
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

.type-animation {
  animation: typing 3.5s steps(40, end);
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

.glitch {
  position: relative;
  animation: glitch-skew 1s linear infinite alternate-reverse;
  text-shadow: 0 0 10px rgba(255, 73, 160, 0.5);
}

.glitch::before,
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  left: 0;
}

.glitch::before {
  animation: glitch-anim-1 0.4s linear infinite alternate-reverse;
  clip: rect(44px, 9999px, 56px, 0);
  text-shadow: 2px 0 rgba(255, 73, 160, 0.5);
}

.glitch::after {
  animation: glitch-anim-2 0.4s linear infinite alternate-reverse;
  clip: rect(24px, 9999px, 36px, 0);
  text-shadow: -2px 0 rgba(73, 160, 255, 0.5);
}

@keyframes glitch-anim-1 {
  0% {
    clip: rect(24px, 9999px, 36px, 0);
    transform: translate(0);
  }
  100% {
    clip: rect(44px, 9999px, 56px, 0);
    transform: translate(-2px, 0);
  }
}

@keyframes glitch-anim-2 {
  0% {
    clip: rect(74px, 9999px, 86px, 0);
    transform: translate(0);
  }
  100% {
    clip: rect(4px, 9999px, 16px, 0);
    transform: translate(2px, 0);
  }
}

@keyframes glitch-skew {
  0% {
    transform: skew(0deg);
  }
  48% {
    transform: skew(0deg);
  }
  50% {
    transform: skew(2deg);
  }
  52% {
    transform: skew(0deg);
  }
  98% {
    transform: skew(0deg);
  }
  100% {
    transform: skew(-2deg);
  }
}

.terminal-window {
  border-radius: 12px;
  background-color: rgba(15, 25, 40, 0.9);
  border: 1px solid rgba(0, 170, 255, 0.3);
  box-shadow: 0 0 20px rgba(0, 170, 255, 0.3);
  padding: 1rem;
  font-family: monospace;
  overflow: hidden;
  backdrop-filter: blur(10px);
}

.terminal-header {
  display: flex;
  margin-bottom: 10px;
}

.terminal-button {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  margin-right: 6px;
}

.terminal-button-red {
  background-color: #ff5f56;
}

.terminal-button-yellow {
  background-color: #ffbd2e;
}

.terminal-button-green {
  background-color: #27c93f;
}

.matrix-bg {
  background-color: #0a1525;
  background-image: 
    radial-gradient(rgba(0, 170, 255, 0.1) 1px, transparent 1px),
    radial-gradient(rgba(0, 170, 255, 0.08) 1px, transparent 1px);
  background-size: 50px 50px;
  background-position: 0 0, 25px 25px;
  background-attachment: fixed;
  position: relative;
  overflow: hidden;
}

.matrix-bg::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(0deg, rgba(10, 21, 37, 0.8) 0%, transparent 50%, rgba(10, 21, 37, 0.8) 100%);
  pointer-events: none;
  z-index: 1;
}

/* Scanner effect */
.scanner-effect {
  position: relative;
  overflow: hidden;
}

.scanner-effect::after {
  content: "";
  position: absolute;
  height: 50%;
  width: 100%;
  left: 0;
  background: linear-gradient(to bottom, 
    transparent, 
    rgba(0, 170, 255, 0.2), 
    transparent
  );
  animation: scanner 3s ease-in-out infinite;
}

/* Loading spinner for API calls */
.loading-spinner {
  width: 50px;
  height: 50px;
  border: 3px solid rgba(0, 170, 255, 0.3);
  border-radius: 50%;
  border-top-color: rgba(0, 170, 255, 0.8);
  animation: spin 1s infinite linear;
  margin: 0 auto;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.terminal-text {
  font-family: monospace;
  color: rgba(0, 170, 255, 1);
  font-size: 0.9rem;
  line-height: 1.5;
}

/* Enhanced UI Effects */
.neon-border {
  box-shadow: 0 0 5px rgba(0, 170, 255, 0.3),
              0 0 10px rgba(0, 170, 255, 0.2),
              0 0 15px rgba(0, 170, 255, 0.2);
  border: 1px solid rgba(0, 170, 255, 0.4);
}

.glass-card {
  background: rgba(15, 25, 40, 0.6);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(0, 170, 255, 0.15);
  box-shadow: 0 8px 32px 0 rgba(10, 10, 26, 0.37);
}

.cyber-button {
  position: relative;
  transition: all 0.3s ease;
  overflow: hidden;
  border: 1px solid rgba(0, 170, 255, 0.3);
  text-shadow: 0 0 2px rgba(0, 170, 255, 0.5);
}

.cyber-button::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  background: linear-gradient(45deg, 
    rgba(0, 170, 255, 0.6),
    transparent,
    rgba(0, 170, 255, 0.6)
  );
  z-index: -1;
  animation: animate 2s linear infinite;
}

@keyframes animate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Matrix background animation */
.matrix-bg {
  background: linear-gradient(135deg, #12101e 0%, #1e1a36 100%);
  position: relative;
  overflow: hidden;
}

.matrix-bg::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    repeating-linear-gradient(0deg, rgba(255, 73, 160, 0.05) 0px, transparent 2px, transparent 4px),
    repeating-linear-gradient(90deg, rgba(255, 73, 160, 0.05) 0px, transparent 2px, transparent 4px);
  background-size: 4px 4px;
  animation: matrixMove 30s linear infinite;
  z-index: -1;
}

@keyframes matrixMove {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 100px 100px;
  }
}

/* Button improvements */
.highlight-button {
  background: linear-gradient(135deg, rgba(255, 73, 160, 0.8), rgba(222, 60, 130, 0.8));
  color: #ffffff;
  font-weight: bold;
  box-shadow: 0 0 15px rgba(255, 73, 160, 0.5);
  border: none;
  text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
}

.contrast-text {
  text-shadow: 0 0 3px rgba(0, 0, 0, 0.8);
  letter-spacing: 0.5px;
}

/* Neon elements */
.neon-text {
  color: #fff;
  text-shadow: 
    0 0 5px rgba(255, 73, 160, 0.8),
    0 0 10px rgba(255, 73, 160, 0.5),
    0 0 15px rgba(255, 73, 160, 0.3);
}

.neon-box {
  box-shadow:
    0 0 5px rgba(255, 73, 160, 0.5),
    0 0 15px rgba(255, 73, 160, 0.3),
    inset 0 0 5px rgba(255, 73, 160, 0.3);
  border: 1px solid rgba(255, 73, 160, 0.3);
  border-radius: var(--radius);
  transition: all 0.3s ease;
}

.neon-box:hover {
  box-shadow:
    0 0 8px rgba(255, 73, 160, 0.6),
    0 0 20px rgba(255, 73, 160, 0.4),
    inset 0 0 8px rgba(255, 73, 160, 0.4);
}

/* Cool hover effects */
.hover-glow {
  transition: all 0.3s ease;
}

.hover-glow:hover {
  filter: brightness(1.2);
  transform: translateY(-2px);
  box-shadow: 0 5px 15px rgba(255, 73, 160, 0.4);
}

@media (max-width: 640px) {
  .responsive-container {
    padding: 0.75rem;
  }
}
